use super::super::sorts::comparative_sort::insertion_sort_try;
use super::super::sorts::utils::Params;

#[test]
fn test_comparative_sort_insertion_sort_try() {
    let p = Params::new(0, 8, 0, 1); // level, radix, offset, max_level
    let mut arr: Vec<u16> = vec![
        512,
        1024,
        1024,
        1024,
        1024,
        1024 + 74,
        1024 + 73,
        1024 + 72,
        1024 + 71,
        1024 + 70,
        1024 + 69,
        1024 + 68,
        1024 + 67,
        1024 + 66,
        1024 + 65,
        1024 + 64,
        1024 + 62,
        1024 + 61,
        1024 + 60,
        1024 + 59,
        1024 + 58,
        1024 + 57,
        1024 + 56,
        1024 + 55,
        1024 + 54,
        1024 + 53,
        1024 + 52,
        1024 + 51,
        1024 + 50,
        1024 + 49,
        1024 + 48,
        1024 + 47,
        1024 + 46,
        1024 + 45,
        1024 + 44,
        1024 + 43,
        1024 + 42,
        1024 + 41,
        1024 + 40,
        1024 + 39,
        1024 + 38,
        1024 + 37,
        1024 + 36,
        1024 + 35,
        1024 + 34,
        1024 + 33,
        1024 + 32,
        1024 + 31,
        1024 + 30,
        1024 + 29,
        1024 + 28,
        1024 + 27,
        1024 + 26,
        1024 + 25,
        1024 + 24,
        1024 + 23,
        1024 + 22,
        1024 + 21,
        1024 + 20,
        1024 + 19,
        1024 + 18,
        1024 + 17,
        1024 + 16,
        1024 + 15,
        1024 + 14,
        1024 + 13,
        1024 + 12,
        1024 + 11,
        1024 + 10,
        1024 + 9,
        1024 + 8,
        1024 + 7,
        1024 + 6,
        1024 + 5,
        1024 + 4,
        1024 + 3,
        1024 + 2,
        1024 + 1,
        1024,
        2048,
    ];

    let unsorted_parts = insertion_sort_try(&mut arr, &p);
    assert_eq!(unsorted_parts[0].0, 1);
    assert_eq!(unsorted_parts[0].1, 79);
}
